name: cicd-pipeline

# CICD Pipeline with GitHub Actions
# See Docs: https://docs.github.com/en/actions
# See available actions: https://github.com/marketplace?type=actions

# Define when to run this pipeline
on:
  push:
    branches: [develop, main]
  pull_request:
    branches: [develop, main]

# Avoid duplicate runs per reference, e.g., for multiple successive pushes to a branch
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# Define reusable ENV vars
env:
  CONDA_ENV_FILE: devops-conda-env.yml
  CONDA_ENV_NAME: devops-env

# Define least privilege security for this workflow
permissions:
  contents: read

# Define CICD jobs
jobs:
  linting:
    name: linting
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - uses: actions/checkout@v5
      # Small footprint conda with built-in caching
      - uses: mamba-org/setup-micromamba@v2
        with:
          environment-file: ${{ env.CONDA_ENV_FILE }}
          environment-name: ${{ env.CONDA_ENV_NAME }}
          cache-environment: true
          cache-downloads: true
      - name: ruff-linting
        run: micromamba run -n $CONDA_ENV_NAME ruff check

  tests:
    name: tests
    runs-on: ubuntu-latest
    needs: linting
    steps:
      # Checkout the repository
      - uses: actions/checkout@v5
      # Small footprint conda with built-in caching
      - uses: mamba-org/setup-micromamba@v2
        with:
          environment-file: ${{ env.CONDA_ENV_FILE }}
          environment-name: ${{ env.CONDA_ENV_NAME }}
          cache-environment: true
          cache-downloads: true
      - name: pytest-report
        run: micromamba run -n $CONDA_ENV_NAME pytest --cov=app --cov-report=xml
      - name: check-test-coverage
        run: micromamba run -n $CONDA_ENV_NAME python scripts/check_test_coverage.py

  deploy:
    name: deploy
    runs-on: ubuntu-latest
    needs: tests
    # Run deploy only for PRs targeting main OR pushes to main
    if: github.ref == 'refs/heads/main' || (github.event_name == 'pull_request' && github.base_ref == 'main')
    steps:
      # Checkout the repository
      - uses: actions/checkout@v5
      # Small footprint conda with built-in caching
      - uses: mamba-org/setup-micromamba@v2
        with:
          environment-file: ${{ env.CONDA_ENV_FILE }}
          environment-name: ${{ env.CONDA_ENV_NAME }}
          cache-environment: true
          cache-downloads: true
      - name: deploy-gradio-app
        run: echo "Run deployment to remote server"
